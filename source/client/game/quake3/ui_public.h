//**************************************************************************
//**
//**	See jlquake.txt for copyright info.
//**
//**	This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 3
//**  of the License, or (at your option) any later version.
//**
//**	This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
//**  included (gnu.txt) GNU General Public License for more details.
//**
//**************************************************************************

#ifndef _QUAKE3_UI_PUBLIC_H
#define _QUAKE3_UI_PUBLIC_H

#include "../tech3/ui_shared.h"

#define Q3UI_API_VERSION  6

enum
{
	Q3UI_ERROR,
	Q3UI_PRINT,
	Q3UI_MILLISECONDS,
	Q3UI_CVAR_SET,
	Q3UI_CVAR_VARIABLEVALUE,
	Q3UI_CVAR_VARIABLESTRINGBUFFER,
	Q3UI_CVAR_SETVALUE,
	Q3UI_CVAR_RESET,
	Q3UI_CVAR_CREATE,
	Q3UI_CVAR_INFOSTRINGBUFFER,
	Q3UI_ARGC,
	Q3UI_ARGV,
	Q3UI_CMD_EXECUTETEXT,
	Q3UI_FS_FOPENFILE,
	Q3UI_FS_READ,
	Q3UI_FS_WRITE,
	Q3UI_FS_FCLOSEFILE,
	Q3UI_FS_GETFILELIST,
	Q3UI_R_REGISTERMODEL,
	Q3UI_R_REGISTERSKIN,
	Q3UI_R_REGISTERSHADERNOMIP,
	Q3UI_R_CLEARSCENE,
	Q3UI_R_ADDREFENTITYTOSCENE,
	Q3UI_R_ADDPOLYTOSCENE,
	Q3UI_R_ADDLIGHTTOSCENE,
	Q3UI_R_RENDERSCENE,
	Q3UI_R_SETCOLOR,
	Q3UI_R_DRAWSTRETCHPIC,
	Q3UI_UPDATESCREEN,
	Q3UI_CM_LERPTAG,
	Q3UI_CM_LOADMODEL,
	Q3UI_S_REGISTERSOUND,
	Q3UI_S_STARTLOCALSOUND,
	Q3UI_KEY_KEYNUMTOSTRINGBUF,
	Q3UI_KEY_GETBINDINGBUF,
	Q3UI_KEY_SETBINDING,
	Q3UI_KEY_ISDOWN,
	Q3UI_KEY_GETOVERSTRIKEMODE,
	Q3UI_KEY_SETOVERSTRIKEMODE,
	Q3UI_KEY_CLEARSTATES,
	Q3UI_KEY_GETCATCHER,
	Q3UI_KEY_SETCATCHER,
	Q3UI_GETCLIPBOARDDATA,
	Q3UI_GETGLCONFIG,
	Q3UI_GETCLIENTSTATE,
	Q3UI_GETCONFIGSTRING,
	Q3UI_LAN_GETPINGQUEUECOUNT,
	Q3UI_LAN_CLEARPING,
	Q3UI_LAN_GETPING,
	Q3UI_LAN_GETPINGINFO,
	Q3UI_CVAR_REGISTER,
	Q3UI_CVAR_UPDATE,
	Q3UI_MEMORY_REMAINING,
	Q3UI_GET_CDKEY,
	Q3UI_SET_CDKEY,
	Q3UI_R_REGISTERFONT,
	Q3UI_R_MODELBOUNDS,
	Q3UI_PC_ADD_GLOBAL_DEFINE,
	Q3UI_PC_LOAD_SOURCE,
	Q3UI_PC_FREE_SOURCE,
	Q3UI_PC_READ_TOKEN,
	Q3UI_PC_SOURCE_FILE_AND_LINE,
	Q3UI_S_STOPBACKGROUNDTRACK,
	Q3UI_S_STARTBACKGROUNDTRACK,
	Q3UI_REAL_TIME,
	Q3UI_LAN_GETSERVERCOUNT,
	Q3UI_LAN_GETSERVERADDRESSSTRING,
	Q3UI_LAN_GETSERVERINFO,
	Q3UI_LAN_MARKSERVERVISIBLE,
	Q3UI_LAN_UPDATEVISIBLEPINGS,
	Q3UI_LAN_RESETPINGS,
	Q3UI_LAN_LOADCACHEDSERVERS,
	Q3UI_LAN_SAVECACHEDSERVERS,
	Q3UI_LAN_ADDSERVER,
	Q3UI_LAN_REMOVESERVER,
	Q3UI_CIN_PLAYCINEMATIC,
	Q3UI_CIN_STOPCINEMATIC,
	Q3UI_CIN_RUNCINEMATIC,
	Q3UI_CIN_DRAWCINEMATIC,
	Q3UI_CIN_SETEXTENTS,
	Q3UI_R_REMAP_SHADER,
	Q3UI_VERIFY_CDKEY,
	Q3UI_LAN_SERVERSTATUS,
	Q3UI_LAN_GETSERVERPING,
	Q3UI_LAN_SERVERISVISIBLE,
	Q3UI_LAN_COMPARESERVERS,
	// 1.32
	Q3UI_FS_SEEK,
	Q3UI_SET_PBCLSTATUS,

	Q3UI_MEMSET = 100,
	Q3UI_MEMCPY,
	Q3UI_STRNCPY,
	Q3UI_SIN,
	Q3UI_COS,
	Q3UI_ATAN2,
	Q3UI_SQRT,
	Q3UI_FLOOR,
	Q3UI_CEIL
};

enum
{

	Q3UI_CONSOLE_COMMAND = 8,
//	qboolean UI_ConsoleCommand( int realTime );

	Q3UI_DRAW_CONNECT_SCREEN,
//	void	Q3UI_DrawConnectScreen( qboolean overlay );
	Q3UI_HASUNIQUECDKEY
// if !overlay, the background will be drawn, otherwise it will be
// overlayed over whatever the cgame has drawn.
// a GetClientState syscall will be made to get the current strings
};

#endif
