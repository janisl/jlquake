//**************************************************************************
//**
//**	See jlquake.txt for copyright info.
//**
//**	This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 3
//**  of the License, or (at your option) any later version.
//**
//**	This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
//**  included (gnu.txt) GNU General Public License for more details.
//**
//**************************************************************************

#ifndef _WOLFMP_UI_PUBLIC_H
#define _WOLFMP_UI_PUBLIC_H

#include "../tech3/ui_shared.h"

enum
{
	WMUIMENU_BAD_CD_KEY = 4,
	WMUIMENU_TEAM,
	WMUIMENU_POSTGAME,
	WMUIMENU_NOTEBOOK,
	WMUIMENU_CLIPBOARD,
	WMUIMENU_HELP,
	WMUIMENU_BOOK1,			//----(SA)	added
	WMUIMENU_BOOK2,			//----(SA)	added
	WMUIMENU_BOOK3,			//----(SA)	added
	WMUIMENU_WM_PICKTEAM,			// NERVE - SMF
	WMUIMENU_WM_PICKPLAYER,		// NERVE - SMF
	WMUIMENU_WM_QUICKMESSAGE,		// NERVE - SMF
	WMUIMENU_WM_QUICKMESSAGEALT,	// NERVE - SMF
	WMUIMENU_WM_LIMBO,			// NERVE - SMF
	WMUIMENU_WM_AUTOUPDATE		// NERVE - DHM
};

enum
{
	WMUI_ERROR,
	WMUI_PRINT,
	WMUI_MILLISECONDS,
	WMUI_CVAR_SET,
	WMUI_CVAR_VARIABLEVALUE,
	WMUI_CVAR_VARIABLESTRINGBUFFER,
	WMUI_CVAR_SETVALUE,
	WMUI_CVAR_RESET,
	WMUI_CVAR_CREATE,
	WMUI_CVAR_INFOSTRINGBUFFER,
	WMUI_ARGC,
	WMUI_ARGV,
	WMUI_CMD_EXECUTETEXT,
	WMUI_FS_FOPENFILE,
	WMUI_FS_READ,
	WMUI_FS_WRITE,
	WMUI_FS_FCLOSEFILE,
	WMUI_FS_GETFILELIST,
	WMUI_FS_DELETEFILE,
	WMUI_R_REGISTERMODEL,
	WMUI_R_REGISTERSKIN,
	WMUI_R_REGISTERSHADERNOMIP,
	WMUI_R_CLEARSCENE,
	WMUI_R_ADDREFENTITYTOSCENE,
	WMUI_R_ADDPOLYTOSCENE,
	WMUI_R_ADDPOLYSTOSCENE,
	// JOSEPH 12-6-99
	WMUI_R_ADDLIGHTTOSCENE,
	// END JOSEPH
	//----(SA)
	WMUI_R_ADDCORONATOSCENE,
	//----(SA)
	WMUI_R_RENDERSCENE,
	WMUI_R_SETCOLOR,
	WMUI_R_DRAWSTRETCHPIC,
	WMUI_UPDATESCREEN,		// 30
	WMUI_CM_LERPTAG,
	WMUI_CM_LOADMODEL,
	WMUI_S_REGISTERSOUND,
	WMUI_S_STARTLOCALSOUND,
	WMUI_KEY_KEYNUMTOSTRINGBUF,
	WMUI_KEY_GETBINDINGBUF,
	WMUI_KEY_SETBINDING,
	WMUI_KEY_ISDOWN,
	WMUI_KEY_GETOVERSTRIKEMODE,
	WMUI_KEY_SETOVERSTRIKEMODE,
	WMUI_KEY_CLEARSTATES,
	WMUI_KEY_GETCATCHER,
	WMUI_KEY_SETCATCHER,
	WMUI_GETCLIPBOARDDATA,
	WMUI_GETGLCONFIG,
	WMUI_GETCLIENTSTATE,
	WMUI_GETCONFIGSTRING,
	WMUI_LAN_GETLOCALSERVERCOUNT,
	WMUI_LAN_GETLOCALSERVERADDRESSSTRING,
	WMUI_LAN_GETGLOBALSERVERCOUNT,		// 50
	WMUI_LAN_GETGLOBALSERVERADDRESSSTRING,
	WMUI_LAN_GETPINGQUEUECOUNT,
	WMUI_LAN_CLEARPING,
	WMUI_LAN_GETPING,
	WMUI_LAN_GETPINGINFO,
	WMUI_CVAR_REGISTER,
	WMUI_CVAR_UPDATE,
	WMUI_MEMORY_REMAINING,

	WMUI_GET_CDKEY,
	WMUI_SET_CDKEY,
	WMUI_R_REGISTERFONT,
	WMUI_R_MODELBOUNDS,
	WMUI_PC_ADD_GLOBAL_DEFINE,
	WMUI_PC_LOAD_SOURCE,
	WMUI_PC_FREE_SOURCE,
	WMUI_PC_READ_TOKEN,
	WMUI_PC_SOURCE_FILE_AND_LINE,
	WMUI_S_STOPBACKGROUNDTRACK,
	WMUI_S_STARTBACKGROUNDTRACK,
	WMUI_REAL_TIME,
	WMUI_LAN_GETSERVERCOUNT,
	WMUI_LAN_GETSERVERADDRESSSTRING,
	WMUI_LAN_GETSERVERINFO,
	WMUI_LAN_MARKSERVERVISIBLE,
	WMUI_LAN_UPDATEVISIBLEPINGS,
	WMUI_LAN_RESETPINGS,
	WMUI_LAN_LOADCACHEDSERVERS,
	WMUI_LAN_SAVECACHEDSERVERS,
	WMUI_LAN_ADDSERVER,
	WMUI_LAN_REMOVESERVER,
	WMUI_CIN_PLAYCINEMATIC,
	WMUI_CIN_STOPCINEMATIC,
	WMUI_CIN_RUNCINEMATIC,
	WMUI_CIN_DRAWCINEMATIC,
	WMUI_CIN_SETEXTENTS,
	WMUI_R_REMAP_SHADER,
	WMUI_VERIFY_CDKEY,
	WMUI_LAN_SERVERSTATUS,
	WMUI_LAN_GETSERVERPING,
	WMUI_LAN_SERVERISVISIBLE,
	WMUI_LAN_COMPARESERVERS,
	WMUI_CL_GETLIMBOSTRING,			// NERVE - SMF
	WMUI_SET_PBCLSTATUS,				// DHM - Nerve
	WMUI_CHECKAUTOUPDATE,				// DHM - Nerve
	WMUI_GET_AUTOUPDATE,				// DHM - Nerve
	WMUI_CL_TRANSLATE_STRING,
	WMUI_OPENURL,
	WMUI_SET_PBSVSTATUS,				// TTimo

	WMUI_MEMSET = 100,
	WMUI_MEMCPY,
	WMUI_STRNCPY,
	WMUI_SIN,
	WMUI_COS,
	WMUI_ATAN2,
	WMUI_SQRT,
	WMUI_FLOOR,
	WMUI_CEIL
};

enum
{

	WMUI_GET_ACTIVE_MENU = 8,
//	void	WMUI_GetActiveMenu( void );

	WMUI_CONSOLE_COMMAND,
//	qboolean UI_ConsoleCommand( void );

	WMUI_DRAW_CONNECT_SCREEN,
//	void	WMUI_DrawConnectScreen( qboolean overlay );
	WMUI_HASUNIQUECDKEY,
// if !overlay, the background will be drawn, otherwise it will be
// overlayed over whatever the cgame has drawn.
// a GetClientState syscall will be made to get the current strings
	WMUI_CHECKEXECKEY		// NERVE - SMF
};

#endif
