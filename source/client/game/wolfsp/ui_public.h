//**************************************************************************
//**
//**	See jlquake.txt for copyright info.
//**
//**	This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 3
//**  of the License, or (at your option) any later version.
//**
//**	This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
//**  included (gnu.txt) GNU General Public License for more details.
//**
//**************************************************************************

#ifndef _WOLFSP_UI_PUBLIC_H
#define _WOLFSP_UI_PUBLIC_H

#include "../tech3/ui_shared.h"

enum
{
	WSUIMENU_ENDGAME = 4,	//----(SA)	added
	WSUIMENU_BAD_CD_KEY,
	WSUIMENU_TEAM,
	WSUIMENU_PREGAME,	//----(SA)	added
	WSUIMENU_POSTGAME,
	WSUIMENU_NOTEBOOK,
	WSUIMENU_CLIPBOARD,
	WSUIMENU_HELP,
	WSUIMENU_BOOK1,			//----(SA)	added
	WSUIMENU_BOOK2,			//----(SA)	added
	WSUIMENU_BOOK3,			//----(SA)	added
	WSUIMENU_WM_PICKTEAM,		// NERVE - SMF - for multiplayer only
	WSUIMENU_WM_PICKPLAYER,	// NERVE - SMF - for multiplayer only
	WSUIMENU_WM_QUICKMESSAGE,	// NERVE - SMF
	WSUIMENU_WM_LIMBO,		// NERVE - SMF
	WSUIMENU_BRIEFING			//----(SA)	added
};

#define WSUI_API_VERSION  4

enum
{
	WSUI_ERROR,
	WSUI_PRINT,
	WSUI_MILLISECONDS,
	WSUI_CVAR_SET,
	WSUI_CVAR_VARIABLEVALUE,
	WSUI_CVAR_VARIABLESTRINGBUFFER,
	WSUI_CVAR_SETVALUE,
	WSUI_CVAR_RESET,
	WSUI_CVAR_CREATE,
	WSUI_CVAR_INFOSTRINGBUFFER,
	WSUI_ARGC,
	WSUI_ARGV,
	WSUI_CMD_EXECUTETEXT,
	WSUI_FS_FOPENFILE,
	WSUI_FS_READ,
	WSUI_FS_SEEK,	//----(SA)	added
	WSUI_FS_WRITE,
	WSUI_FS_FCLOSEFILE,
	WSUI_FS_GETFILELIST,
	WSUI_FS_DELETEFILE,
	WSUI_R_REGISTERMODEL,
	WSUI_R_REGISTERSKIN,
	WSUI_R_REGISTERSHADERNOMIP,
	WSUI_R_CLEARSCENE,
	WSUI_R_ADDREFENTITYTOSCENE,
	WSUI_R_ADDPOLYTOSCENE,
	WSUI_R_ADDPOLYSTOSCENE,
	// JOSEPH 12-6-99
	WSUI_R_ADDLIGHTTOSCENE,
	// END JOSEPH
	//----(SA)
	WSUI_R_ADDCORONATOSCENE,
	//----(SA)
	WSUI_R_RENDERSCENE,
	WSUI_R_SETCOLOR,
	WSUI_R_DRAWSTRETCHPIC,
	WSUI_UPDATESCREEN,		// 30
	WSUI_CM_LERPTAG,
	WSUI_CM_LOADMODEL,
	WSUI_S_REGISTERSOUND,
	WSUI_S_STARTLOCALSOUND,
	WSUI_S_FADESTREAMINGSOUND,	//----(SA)	added
	WSUI_S_FADEALLSOUNDS,			//----(SA)	added
	WSUI_KEY_KEYNUMTOSTRINGBUF,
	WSUI_KEY_GETBINDINGBUF,
	WSUI_KEY_SETBINDING,
	WSUI_KEY_ISDOWN,
	WSUI_KEY_GETOVERSTRIKEMODE,
	WSUI_KEY_SETOVERSTRIKEMODE,
	WSUI_KEY_CLEARSTATES,
	WSUI_KEY_GETCATCHER,
	WSUI_KEY_SETCATCHER,
	WSUI_GETCLIPBOARDDATA,
	WSUI_GETGLCONFIG,
	WSUI_GETCLIENTSTATE,
	WSUI_GETCONFIGSTRING,
	WSUI_LAN_GETLOCALSERVERCOUNT,
	WSUI_LAN_GETLOCALSERVERADDRESSSTRING,
	WSUI_LAN_GETGLOBALSERVERCOUNT,		// 50
	WSUI_LAN_GETGLOBALSERVERADDRESSSTRING,
	WSUI_LAN_GETPINGQUEUECOUNT,
	WSUI_LAN_CLEARPING,
	WSUI_LAN_GETPING,
	WSUI_LAN_GETPINGINFO,
	WSUI_CVAR_REGISTER,
	WSUI_CVAR_UPDATE,
	WSUI_MEMORY_REMAINING,

	WSUI_GET_CDKEY,
	WSUI_SET_CDKEY,
	WSUI_R_REGISTERFONT,
	WSUI_R_MODELBOUNDS,
	WSUI_PC_ADD_GLOBAL_DEFINE,
	WSUI_PC_LOAD_SOURCE,
	WSUI_PC_FREE_SOURCE,
	WSUI_PC_READ_TOKEN,
	WSUI_PC_SOURCE_FILE_AND_LINE,
	WSUI_S_STOPBACKGROUNDTRACK,
	WSUI_S_STARTBACKGROUNDTRACK,
	WSUI_REAL_TIME,
	WSUI_LAN_GETSERVERCOUNT,
	WSUI_LAN_GETSERVERADDRESSSTRING,
	WSUI_LAN_GETSERVERINFO,
	WSUI_LAN_MARKSERVERVISIBLE,
	WSUI_LAN_UPDATEVISIBLEPINGS,
	WSUI_LAN_RESETPINGS,
	WSUI_LAN_LOADCACHEDSERVERS,
	WSUI_LAN_SAVECACHEDSERVERS,
	WSUI_LAN_ADDSERVER,
	WSUI_LAN_REMOVESERVER,
	WSUI_CIN_PLAYCINEMATIC,
	WSUI_CIN_STOPCINEMATIC,
	WSUI_CIN_RUNCINEMATIC,
	WSUI_CIN_DRAWCINEMATIC,
	WSUI_CIN_SETEXTENTS,
	WSUI_R_REMAP_SHADER,
	WSUI_VERIFY_CDKEY,
	WSUI_LAN_SERVERSTATUS,
	WSUI_LAN_GETSERVERPING,
	WSUI_LAN_SERVERISVISIBLE,
	WSUI_LAN_COMPARESERVERS,
	WSUI_CL_GETLIMBOSTRING,			// NERVE - SMF

	WSUI_MEMSET = 100,
	WSUI_MEMCPY,
	WSUI_STRNCPY,
	WSUI_SIN,
	WSUI_COS,
	WSUI_ATAN2,
	WSUI_SQRT,
	WSUI_FLOOR,
	WSUI_CEIL
};

enum
{

	WSUI_GET_ACTIVE_MENU = 8,
//	void	WSUI_GetActiveMenu( void );

	WSUI_CONSOLE_COMMAND,
//	qboolean UI_ConsoleCommand( void );

	WSUI_DRAW_CONNECT_SCREEN,
//	void	WSUI_DrawConnectScreen( qboolean overlay );
	WSUI_HASUNIQUECDKEY
// if !overlay, the background will be drawn, otherwise it will be
// overlayed over whatever the cgame has drawn.
// a UIT3_GetClientState syscall will be made to get the current strings
};

#endif
